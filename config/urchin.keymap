/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define EXT 1
#define FNC 2
#define SYM 3
#define NUM 4
#define SETTINGS 5

// -----------------

&sk {
    // don't release mods on other mods presses

    ignore-modifiers;
};

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"

        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };

        tmux_win_prev: tmux_win_prev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp R>;

            label = "TMUX_WIN_PREV";
        };

        tmux_win_next: tmux_win_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp J>;

            label = "TMUX_WIN_NEXT";
        };

        tmux_new_win: tmux_new_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp C>;

            label = "TMUX_NEW_WIN";
        };

        tmux_sess_prev: tmux_sess_prev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp LPAR>;

            label = "TMUX_SESS_PREV";
        };

        tmux_sess_next: tmux_sess_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp RPAR>;

            label = "TMUX_SESS_NEXT";
        };

        tmux_pane_split_v: tmux_pane_split_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp PERCENT>;

            label = "TMUX_PANE_SPLIT_V";
        };

        tmux_pane_split_h: tmux_pane_split_h {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp LS(P)>;

            label = "TMUX_PANE_SPLIT_H";
        };

        tmux_kill_win: tmux_kill_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(T)>, <&macro_tap>, <&kp AMPERSAND>;

            label = "TMUX_KILL_WIN";
        };
    };

    combos {
        compatible = "zmk,combos";

        // both left thumb keys

        combo_settings {
            timeout-ms = <200>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };

        // both outer thumb keys - Function layer

        combo_function {
            timeout-ms = <200>;
            key-positions = <30 33>;
            bindings = <&mo FNC>;
        };

        // Shift and Symbols keys - Numbers layer

        combo_numbers {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo NUM>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer - Colemak-DH

        default_layer {
            label = "Base";
            bindings = <
&kp Q  &kp W  &kp E  &kp R    &kp T            &kp Y      &kp U    &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F    &kp G            &kp H      &kp J    &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V    &kp B            &kp N      &kp M    &kp COMMA  &kp DOT  &kp FSLH
                     &mo EXT  &qt LSHIFT LGUI  &kp SPACE  &sl SYM
            >;
        };

        // Extend layer - navigation and modifiers

        ext_layer {
            label = "Extend";
            bindings = <
&kp ESC     &kp LG(LEFT)  &kp LG(E)  &kp LG(RIGHT)  &kp LC(T)  &kp PG_UP          &kp HOME  &kp UP    &kp END    &kp CAPS
&sk LSHIFT  &sk LCTRL     &sk LALT   &sk LGUI       &sk RGUI   &kp PG_DN          &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&kp LG(Z)   &kp LG(X)     &kp LG(C)  &kp LALT       &kp LG(B)  &kp LA(BACKSPACE)  &kp BSPC  &kp TAB   &sk RALT   &kp PRINTSCREEN
                                     &trans         &trans     &kp ENTER          &trans
            >;
        };

        // Function layer - function keys and media

        fnc_layer {
            label = "Function";
            bindings = <
&kp C_STOP  &kp C_PREV    &kp C_PP       &kp C_NEXT    &kp C_BRI_UP   &tmux_sess_prev  &tmux_win_prev  &kp LC(N)  &tmux_win_next  &tmux_sess_next
&sk LSHIFT  &sk LCTRL     &sk LALT       &sk LGUI      &kp C_BRI_DN   &tmux_new_win    &kp LC(M)       &kp LC(Y)  &kp LC(U)       &tmux_pane_split_v
&kp C_MUTE  &kp C_VOL_DN  &kp LG(LS(C))  &kp C_VOL_UP  &kp LG(LS(B))  &tmux_kill_win   &kp F13         &kp F14    &kp F15         &tmux_pane_split_h
                                         &trans        &trans         &kp ENTER        &trans
            >;
        };

        // Symbols layer

        sym_layer {
            label = "Symbols";
            bindings = <
&kp EXCL    &kp AT     &kp HASH  &kp DLLR  &kp PRCNT  &kp EQUAL  &kp GRAVE  &kp LS(APOS)  &kp APOS  &kp PLUS
&sk LSHIFT  &sk LCTRL  &sk LALT  &sk LGUI  &kp CARET  &kp STAR   &kp LPAR   &kp LBRC      &kp LBKT  &kp MINUS
&none       &none      &kp BSLH  &kp PIPE  &kp AMPS   &kp TILDE  &kp RPAR   &kp RBRC      &kp RBKT  &kp UNDER
                                 &trans    &trans     &trans     &trans
            >;
        };

        // Numbers layer

        num_layer {
            label = "Numbers";
            bindings = <
&none       &none      &none     &none     &kp KP_NLCK  &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp PLUS
&sk LSHIFT  &sk LCTRL  &sk LALT  &sk LGUI  &sk RGUI     &kp STAR   &kp N4  &kp N5  &kp N6  &kp MINUS
&none       &kp RALT   &kp TAB   &kp BSPC  &kp ENTER    &kp N0     &kp N1  &kp N2  &kp N3  &kp FSLH
                                 &trans    &trans       &kp DOT    &trans
            >;
        };

        // Settings layer

        settings_layer {
            label = "Settings";
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 3  &none   &none  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1  &bt BT_SEL 4  &none   &none  &none  &none
&none        &none  &none  &none       &bt BT_SEL 2  &bt BT_SEL 5  &none   &none  &none  &studio_unlock
                           &trans      &trans        &trans        &trans
            >;
        };
    };
};
